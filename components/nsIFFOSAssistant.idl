#include "nsISupports.idl"
#include "nsIDOMEventListener.idl"

interface nsIDOMDOMRequest;

[scriptable, uuid(9dd6047d-e7c8-43f9-a45d-56794b8bc246)]
interface nsIFFOSAssistant : nsISupports
{
  /**
   * Indicates if the USB cable is connected and ADB forward success
   */
  readonly attribute boolean adbConnected;

  /**
   * FFOS device name
   */
  readonly attribute jsval adbffosDeviceName;

  readonly attribute boolean isWifiConnect;

  /* Fired when USB cable or ADB forward disconnected */
  attribute nsIDOMEventListener onadbstatechange;

  /**
   * select directory for exporting pictures, musics and videos
   */
  boolean selectDirectory(in jsval callback, in jsval options);

  /**
   * Save content to disk
   * options:
   *   {
   *     title: 'Save As VCard',   // The title of file picker
   *     name:  'myfile', // The file name
   *     extention: 'txt' // The file extension
   *   }
   */
  boolean saveToDisk(in DOMString content,
                     in jsval callback,
                     [optional] in jsval options);

  /**
   * Read content from disk
   */
  boolean readFromDisk(in jsval callback);

  /**
   * Get file names from directory
   */
  void selectMultiFilesFromDisk(in jsval callback, in jsval options);

  /**
   *
   */
  void getDirInTmp(in jsval folderName, in jsval callback);

  /**
   * Run command from local host
   */
  nsIDOMDOMRequest runCmd(in DOMString cmd);

  /**
   * To make the page debuggable by using Firebug, we should not use any privileged
   * interfaces, instead, we open such an interface to support the communication
   * between the page and the Driver Downloader
   *
   * Send Command To Driver Manager, and receive response immediately.
   * cmd = {
   *   command: 'addDownload' | 'cancelDownload' | 'resumeDownload' | 'getDownload',
   *   data: {
   *     ...
   *   }
   * }
   */
  jsval sendCmdToDriverDownloader(in jsval cmd, [optional] in boolean async);

  /**
   * Start the USB Monitor Daemon
   */
  void startDriverManager();

  void wifiConnected(in boolean isConnected);
};

